version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rdc-assay-postgres
    environment:
      POSTGRES_USER: rdcassay
      POSTGRES_PASSWORD: rdcassay_password
      POSTGRES_DB: rdc_assay_pro
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - rdc-assay-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rdcassay -d rdc_assay_pro"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: rdc-assay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rdc-assay-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build: .
    container_name: rdc-assay-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://rdcassay:rdcassay_password@postgres:5432/rdc_assay_pro
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      PORT: 5000
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      REDIS_URL: redis://redis:6379
      UPLOAD_PATH: /app/uploads
      LOG_LEVEL: info
    ports:
      - "5000:5000"
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    networks:
      - rdc-assay-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: rdc-assay-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    networks:
      - rdc-assay-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  rdc-assay-network:
    driver: bridge
